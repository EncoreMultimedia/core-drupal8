{"version":3,"sources":["global/_global.scss","mixins/_global-mixins.scss"],"names":[],"mappings":"AAAA,wBAEI,gBCcgD,CDLjD,AAPC,0BAJJ,wBAKM,gBCW8C,CDLjD,CAAA,AAHC,0BARJ,wBASM,gBCO8C,CDLjD,CAAA","file":"styles.css","sourcesContent":[".region {\n  .region-wrapper {\n    padding: $padding_mobile;\n\n    @media (min-width: $media_ewok) {\n      padding: $padding_tablet;\n    }\n\n    @media (min-width: $media_jabba) {\n      padding: $padding_desktop;\n    }\n  }\n\n}\n","// =============================================================================\n// Utility Mixins\n// =============================================================================\n\n// Clearfix\n@mixin clearfix() {\n  &::after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n// if $context is true, switch to rem\n@function em($px, $context-or-rem: $base-font-size) {\n  @if ($context-or-rem == true) {\n    @return $px / strip_unit($base-font-size) * 1rem;\n  } @else {\n    @return $px / strip_unit($context-or-rem) * 1em;\n  }\n}\n\n/// Remove the unit of a length\n/// @param {Number} $number - Number to remove unit from\n/// @return {Number} - Unitless number\n@function strip_unit($number) {\n  @if type-of($number) == 'number' and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}"],"sourceRoot":"/source/"}